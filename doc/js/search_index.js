var search_data = {"index":{"searchIndex":["guard","guard","cunit","runner","cunitguard","dsl","object","tempprjenv","cleanup_tmp_prj_dir()","create_tmp_prj_dir()","cunit_runner()","fake_test_exe()","guardfile_has_unit_test_exe()","libdir()","new()","new()","popen_failing_fake()","popen_successfull_fake()","prydnya()","run()","run_all()","run_clean()","run_make()","run_on_change()","run_task()","run_tests()","set_builder()","set_builder()","set_cleaner()","set_cleaner()","set_libdir()","set_runner()","gemfile","guardfile","rakefile","guardfile"],"longSearchIndex":["guard","guard","guard::cunit","guard::cunit::runner","guard::cunitguard","guard::dsl","object","tempprjenv","tempprjenv::cleanup_tmp_prj_dir()","tempprjenv::create_tmp_prj_dir()","guard::dsl#cunit_runner()","object#fake_test_exe()","object#guardfile_has_unit_test_exe()","guard::dsl#libdir()","guard::cunit::new()","guard::dsl::new()","object#popen_failing_fake()","object#popen_successfull_fake()","guard::dsl#prydnya()","guard::cunit::runner#run()","guard::cunit#run_all()","guard::cunit::runner#run_clean()","guard::cunit::runner#run_make()","guard::cunit#run_on_change()","guard::cunit::runner#run_task()","guard::cunit::runner#run_tests()","guard::cunit::runner::set_builder()","guard::dsl#set_builder()","guard::cunit::runner::set_cleaner()","guard::dsl#set_cleaner()","guard::cunit::runner::set_libdir()","guard::cunit::runner::set_runner()","","","",""],"info":[["Guard","","Guard.html","",""],["Guard","","Guard.html","","<p>version\n"],["Guard::Cunit","","Guard/Cunit.html","",""],["Guard::Cunit::Runner","","Guard/Cunit/Runner.html","",""],["Guard::CunitGuard","","Guard/CunitGuard.html","",""],["Guard::Dsl","","Guard/Dsl.html","",""],["Object","","Object.html","",""],["TempPrjEnv","","TempPrjEnv.html","","<p>a class to set/cleanup environment for fake project\n"],["cleanup_tmp_prj_dir","TempPrjEnv","TempPrjEnv.html#method-c-cleanup_tmp_prj_dir","()","<p>cleanup the subdir\n"],["create_tmp_prj_dir","TempPrjEnv","TempPrjEnv.html#method-c-create_tmp_prj_dir","()","<p>create a tmp subdir and within it fake project directory\n"],["cunit_runner","Guard::Dsl","Guard/Dsl.html#method-i-cunit_runner","(name)","<p>dsl call to set cunit test executable\n"],["fake_test_exe","Object","Object.html#method-i-fake_test_exe","(exe_name,successful = :fail)",""],["guardfile_has_unit_test_exe","Object","Object.html#method-i-guardfile_has_unit_test_exe","(params={ :test_exe=>nil, :builder=>nil, :cleaner=>nil, :libdir=>nil})","<p>a generator for CUnit Guardfile\n"],["libdir","Guard::Dsl","Guard/Dsl.html#method-i-libdir","(name)","<p>dsl call to set dir, where library under test is generated, by default\ncurrent dir\n"],["new","Guard::Cunit","Guard/Cunit.html#method-c-new","(watchers = [], options = {})",""],["new","Guard::Dsl","Guard/Dsl.html#method-c-new","()",""],["popen_failing_fake","Object","Object.html#method-i-popen_failing_fake","(fakename)","<p>setup stub for system command with failing exit result\n"],["popen_successfull_fake","Object","Object.html#method-i-popen_successfull_fake","(fakename)","<p>setup stub for system command with successful exit result\n"],["prydnya","Guard::Dsl","Guard/Dsl.html#method-i-prydnya","()",""],["run","Guard::Cunit::Runner","Guard/Cunit/Runner.html#method-i-run","()","<p>run them all\n"],["run_all","Guard::Cunit","Guard/Cunit.html#method-i-run_all","()","\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">start</span>\n  <span class=\"ruby-keyword\">super</span>\n  <span class=\"ruby-constant\">UI</span>.<span class=\"ruby-identifier\">info</span> <span class=\"ruby-string\">&quot;Guard::Cunit is running!&quot;</span>\n  <span class=\"ruby-identifier\">run_all</span> <span class=\"ruby-keyword\">if</span> <span class=\"ruby-ivar\">@options</span>[:<span class=\"ruby-identifier\">all_on_start</span>]\n<span class=\"ruby-keyword\">end</span>\n</pre>\n<p>Called …\n"],["run_clean","Guard::Cunit::Runner","Guard/Cunit/Runner.html#method-i-run_clean","()","<p>run clean before each run all start with clean\n"],["run_make","Guard::Cunit::Runner","Guard/Cunit/Runner.html#method-i-run_make","()","<p>run make command to build the project\n"],["run_on_change","Guard::Cunit","Guard/Cunit.html#method-i-run_on_change","()",""],["run_task","Guard::Cunit::Runner","Guard/Cunit/Runner.html#method-i-run_task","(task_executable)","<p>run one phase of the guard via a system command/executable\n"],["run_tests","Guard::Cunit::Runner","Guard/Cunit/Runner.html#method-i-run_tests","()","<p>run unit tests via cunit executable\n"],["set_builder","Guard::Cunit::Runner","Guard/Cunit/Runner.html#method-c-set_builder","(name)","<p>set command to run to prepare build\n"],["set_builder","Guard::Dsl","Guard/Dsl.html#method-i-set_builder","(name)","<p>dsl call to set cunit build command/script, by default make\n"],["set_cleaner","Guard::Cunit::Runner","Guard/Cunit/Runner.html#method-c-set_cleaner","(name)","<p>set cleaner script/exe/command\n"],["set_cleaner","Guard::Dsl","Guard/Dsl.html#method-i-set_cleaner","(name)","<p>dsl call to set cunit clean command/script, by default ‘make clean’\n"],["set_libdir","Guard::Cunit::Runner","Guard/Cunit/Runner.html#method-c-set_libdir","(name)","<p>set directory where library under test is generated\n"],["set_runner","Guard::Cunit::Runner","Guard/Cunit/Runner.html#method-c-set_runner","(name)","<p>set the executable file name to run CUNIT tests\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p># Specify your gem’s dependencies in guard-cunit.gemspec gemspec gem\n‘guard’, …\n"],["Guardfile","","Guardfile.html","","<p># A sample Guardfile # More info at github.com/guard/guard#readme\n<p>guard ‘rspec’, :version =&gt; 2 do\n\n<pre>watch(%r{^spec/.+_spec\\.rb$}) ...</pre>\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks”\n"],["Guardfile","","lib/guard/cunit/templates/Guardfile.html","","<p># # Cunit Guardfile - keep dflt builders after guard watcher’s block #\nguard ‘cunit’ do\n\n<pre>watch(%r{((.+)\\.c$)|((.+)\\.h$)|((M|m)akefile$)} ...</pre>\n"]]}}